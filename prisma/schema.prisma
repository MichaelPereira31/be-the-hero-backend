// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id           String   @id @default(uuid())
  street       String
  number       String
  neighborhood String
  city         String
  complement   String
  reference    String
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  User User[]

  @@map("address")
}

model Ong {
  id             String   @id @default(uuid())
  name           String
  description    String
  objective      String
  mainPhone      String   @map("main_phone")
  secondaryPhone String   @map("secondary_phone")
  mainEmail      String   @map("main_email")
  secondaryEmail String   @map("secondary_email")
  user           User     @relation(fields: [userId], references: [id])
  userId         String   @unique
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@map("ong")
}

model User {
  id        String   @id @default(uuid())
  avatar    String?
  name      String?
  lastName  String?  @map("last_name")
  email     String?  @unique
  password  String?
  status    String   @default("inactive")
  type      String   @default("voluntary")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  address   Address?    @relation(fields: [addressId], references: [id])
  addressId String?
  voluntary Voluntary[]
  ong       Ong?
  Event     Event[]

  @@map("user")
}

model Event {
  id          String      @id @default(uuid())
  name        String
  description String
  category    String
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  voluntary   Voluntary[]
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  userType    String

  @@map("event")
}

model Voluntary {
  id        String      @id @default(uuid())
  user      User        @relation(fields: [userId], references: [id])
  event     Event       @relation(fields: [eventId], references: [id])
  status    EventStatus
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  userId    String
  eventId   String

  @@map("voluntary")
}

enum EventStatus {
  accepted
  waiting
  canceled
  expired
  concluded
}
